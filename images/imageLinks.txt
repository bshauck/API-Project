Wireframe:
https://appacademy-open-assets.s3.us-west-1.amazonaws.com/Modular-Curriculum/content/week-16/AirBnB+MVP+Wireframes.pdf


FRIDAY
Changed pictures to those hosted by Flickr for faster load
In CreateSpot thunk, ensure that singleSpot version of id was
retrieved to have Owner data, before sending Create to db. Actually,
Update can only be done by owner, so current user has the info needed;
but anyone can see details so we do need to start ensureing user data
retrieved and store; will start using newer store outline for this.
After create spot; now owner's name showing correctly

SATURDAY
removed null bug introduced in Friday changes to session reducer
started changes to seeders based on getting more requirements method
  30 char in spot description
  preview always state
  some supporting images



ISSUES
Error on update thunk: undefined, not spot data, passed into action creator wrong, hits in reducer
login db errors under heading
SpotForm needs to list urls vertically,
  and ignore them for Update. ANd PUT
  error messages in them correctly.
back to some issue with creating a spot
getting newly created spot id after create spot
  to correctly go to the spot details page
Update correctly for Delete Spot for user
Spots for user should be listed in updateDate order
(new added to beginning)
Browser refresh doesn't update Manage Spots

Subheading size too large
Subheading weight too heavy
Regular text too large
Heading weight somewhat more
Textarea needs to extend across
L/R edges of most elements need to align
Submit button needs to be centered and colored
Remove DEFAULT button (LAST THING)
Comma misplaced on Create Spot (city, state)
Confirm spot image creation working NO
Delete Spot does not cause update on ManageSpots previewImage
Successful new Spot creation takes to SpotDetails
Have reasonable image sizing (tiles should be 3x6)
Reviews add to SpotDetails
Callout box add to SpotDetails
StarRatings add to SpotDetails
CreateReview
DeleteReview
CSS Delete Spot modal
CSS not-logged-in menu
CSS sign up dialog form


Adding Fake descriptive text for host
Adding Callout with price night, small review avg, Reserve button
Adding divider on Spot details
List of Review Tiles (in update order; new added to beginning)
    Review Tile has
    Star Rating string
    Post Your Review optional button
    If No Reviews, then optional Be the first to post a review! string
    FirstName of reviewer
    Optional Delete button (if your review)
Post Your Review opens modal dialog for inputting Review
Need open star icon for review rating with Paw Print functionality
Delete button opens modal dialog for deleting Review
On delete, review counts and averages need to be updated

Understanding entire flow of error-handling and implementing correctly
from front request with thunk to thunk fetch (I understand backend, and
csrfFetch checking status code and throwing error when code >= 400) (decoration
suggested removing the csrfFetch throw, just checking the error code, using
async/await; changed login modal handling but need to do that for signup;
long term do better with then.catch consistency)

Better understanding of Promise .then.catch
Knowing when things may be promises; and why some things that are
    Promises are sometimes, are also not sometimes
    e.g., response from fetch does not always understand .JSON


header spacing: added bottom to allow ManageSpots to work: modal apparently
    NOT on top of other elements

More:
Create Review
Delete Review

FINALLY CSS
Form placeholder text lighter
price "night", star rating "review" both darker



image pics, server vs local copies, changing specified
Making default to show no image present
Generate large amount of data
Have SpotForm show first 4 validation error messages to side of label

BUGS:
Login on error (invalid password/credential) changes size,
and a sliver of a modalDIv appears underneath main modal
Should seed a SpotImage for preview for every seeded Spot
(should do a lot for generated photo data, but have a
placeholder URI now--see frontend utils)


Bonus:
review update
Bookings
map API
after map API add read-only lat/long to SpotForm
store shape efficiency
caching
validate images
query search to change what spots are listed

Achieved:


Longterm:
Have previewUrl stored in Spot
Remove preview from Spot Images table
SpotImages are only support images;
Update Spot has to do more work if
  updating existing images to different opens
  the previewUrl just stored in Spot,
  but the supporting ones being changed means
  have to look at differences and figure
  out what are insertions, and what are updates
  into the SpotImages table.
Dan says 100-1000 generated seeds
Look up all unseed functions via known userSpots
